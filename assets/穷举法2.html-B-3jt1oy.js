import{_ as n,o as s,c as a,a as p}from"./app-CrKXQHLj.js";const t={},o=p(`<h1 id="穷举法-2" tabindex="-1"><a class="header-anchor" href="#穷举法-2"><span>穷举法 2</span></a></h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><p>将 1,2,…,9 共 9 个数分成 3 组，分别组成 3 个三位数，且使这 3 个三位数构成 1:2:3 的比例，试求出所有满足条件的 3 个三位数。</p><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h2><p>遍历所有情况，筛选出有用的</p><h2 id="方法1" tabindex="-1"><a class="header-anchor" href="#方法1"><span>方法1</span></a></h2><p>空间复杂度 10<em>9</em>8<em>7。。。<em>2，即n</em>(n-1)</em>(n-2)...*(n-8),即(n^n)，时间复杂度同理</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">//思路，写九层循环，暴力破解</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 9层</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//  printf(&quot;%d\\n&quot;,a);</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> b <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">;</span> b<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> a<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> b <span class="token operator">||</span> c <span class="token operator">==</span> a<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> d <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> d<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">==</span> c <span class="token operator">||</span> d <span class="token operator">==</span> b <span class="token operator">||</span> d <span class="token operator">==</span> a<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> e <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> e <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> e<span class="token operator">++</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> d <span class="token operator">||</span> e <span class="token operator">==</span> c <span class="token operator">||</span> e <span class="token operator">==</span> b <span class="token operator">||</span> e <span class="token operator">==</span> a<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> f <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> f <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> f<span class="token operator">++</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> e <span class="token operator">||</span> f <span class="token operator">==</span> d <span class="token operator">||</span> f <span class="token operator">==</span> c <span class="token operator">||</span> f <span class="token operator">==</span> b <span class="token operator">||</span> f <span class="token operator">==</span> a<span class="token punctuation">)</span>
                            <span class="token punctuation">{</span>
                                <span class="token keyword">continue</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> g <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> g<span class="token operator">++</span><span class="token punctuation">)</span>
                            <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">==</span> f <span class="token operator">||</span> g <span class="token operator">==</span> e <span class="token operator">||</span> g <span class="token operator">==</span> d <span class="token operator">||</span> g <span class="token operator">==</span> c <span class="token operator">||</span> g <span class="token operator">==</span> b <span class="token operator">||</span> g <span class="token operator">==</span> a<span class="token punctuation">)</span>
                                <span class="token punctuation">{</span>
                                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> h <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> h<span class="token operator">++</span><span class="token punctuation">)</span>
                                <span class="token punctuation">{</span>
                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">==</span> g <span class="token operator">||</span> h <span class="token operator">==</span> f <span class="token operator">||</span> h <span class="token operator">==</span> e <span class="token operator">||</span> h <span class="token operator">==</span> d <span class="token operator">||</span> h <span class="token operator">==</span> c <span class="token operator">||</span> h <span class="token operator">==</span> b <span class="token operator">||</span> h <span class="token operator">==</span> a<span class="token punctuation">)</span>
                                    <span class="token punctuation">{</span>
                                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>

                                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">{</span>
                                        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> h <span class="token operator">||</span> i <span class="token operator">==</span> g <span class="token operator">||</span> i <span class="token operator">==</span> f <span class="token operator">||</span> i <span class="token operator">==</span> e <span class="token operator">||</span> i <span class="token operator">==</span> d <span class="token operator">||</span> i <span class="token operator">==</span> c <span class="token operator">||</span> i <span class="token operator">==</span> b <span class="token operator">||</span> i <span class="token operator">==</span> a<span class="token punctuation">)</span>
                                        <span class="token punctuation">{</span>
                                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                                        <span class="token punctuation">}</span>
                                        <span class="token comment">// printf(&quot;%d\\n&quot;,i);</span>
                                    <span class="token comment">//    分成三组</span>
                                    <span class="token comment">// 谁组成百位，十位，个位都一样</span>
                                    <span class="token comment">//a 与i一样取值范围都是1-9</span>
                                        <span class="token keyword">int</span> sum1 <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> c <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>
                                        <span class="token keyword">int</span> sum2 <span class="token operator">=</span> d <span class="token operator">+</span> e <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> f <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>
                                        <span class="token keyword">int</span> sum3 <span class="token operator">=</span> g <span class="token operator">+</span> h <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>
                                        <span class="token comment">// 筛选比例1：2：3</span>
                                        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum1 <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">==</span> sum2 <span class="token operator">&amp;&amp;</span> sum1 <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">==</span> sum3<span class="token punctuation">)</span>
                                        <span class="token punctuation">{</span>
                                            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %d %d\\n&quot;</span><span class="token punctuation">,</span> sum1<span class="token punctuation">,</span> sum2<span class="token punctuation">,</span> sum3<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                        <span class="token punctuation">}</span>
                                    <span class="token punctuation">}</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="方法2-反向穷举法" tabindex="-1"><a class="header-anchor" href="#方法2-反向穷举法"><span>方法2：反向穷举法</span></a></h1><p>同样是穷举法，但穷举第一个sum1，计算可得它的取值范围000~333，同时添加约束条件即可获得</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>						<span class="token comment">//令三个数分别为a:b:c</span>
	<span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> s<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">333</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>			<span class="token comment">//数值不能重复</span>
	<span class="token punctuation">{</span>
		b <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> a<span class="token punctuation">;</span>			<span class="token comment">//计算b、c的值</span>
		s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> a <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> a <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> a <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">//分离a的百位、十位、个位。下同</span>
		s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> b <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> b <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> b <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
		s<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> c <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> c <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span> s<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> c <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>			<span class="token comment">//判断是否有重复数字（前一个数字和后面所有数字比较，如第1个和第2个至9个比较）、是否有数字0</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">||</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">||</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">8</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span>			<span class="token comment">//无重复数字、也无0</span>
			<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a=%d,b=%d,c=%d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),e=[o];function c(l,i){return s(),a("div",null,e)}const u=n(t,[["render",c],["__file","穷举法2.html.vue"]]),k=JSON.parse('{"path":"/algorithm/others/%E7%A9%B7%E4%B8%BE%E6%B3%952.html","title":"穷举法 2","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"方法1","slug":"方法1","link":"#方法1","children":[]}],"git":{},"filePathRelative":"algorithm/others/穷举法2.md"}');export{u as comp,k as data};
